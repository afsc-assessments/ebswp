[{"path":"https://afsc-assessments.github.io/ebswp/articles/Assessment-planning.html","id":"ebs-pollock-2024-assessment-analyses-planning","dir":"Articles","previous_headings":"","what":"EBS pollock 2024 assessment analyses planning","title":"Planning notes for the pollock assessment in the EBS","text":"Please see EBS pollock assessment planning document recent planning notes.","code":""},{"path":[]},{"path":"https://afsc-assessments.github.io/ebswp/articles/Change_Model_Specs.html","id":"read-in-an-existing-model","dir":"Articles","previous_headings":"Example use of ebswp library for setting up a new model","what":"Read in an existing model","title":"Example on how to change and run a model","text":"Now use process error tuned file fix vales ‚Äússb‚Äù files","code":"d1 <- read_dat(\"runs/dat/proctune1.dat\") d2 <- read_dat(\"runs/dat/pm_ssb0.dat\") d3            <- d2 d3$n_avo      <- d1$n_avo d3$ob_avo     <- d1$ob_avo d3$ob_avo_std <- d1$ob_avo_std d3$wt_avo     <- d1$wt_avo d3$yrs_avo    <- d1$yrs_avo  write_dat(output_file=\"runs/dat/pm_ssb0new.dat\", indata=d3)  # Create directory and copy key files dir.create(\"runs/ssb0\") file.copy(\"runs/ssb0_origProcTune/control.dat\",\"runs/ssb0/\",overwrite = TRUE) file.copy(\"runs/avon2/compweights.ctl\",\"runs/ssb0/\",overwrite = TRUE) file.remove(\"runs/ssb0/pm\") file.symlink(\"../../src/pm\",\"runs/ssb0/pm\") # Read pm.dat, then write (e.g.,)   pm.dat<-read_table(\"runs/ProcTune/pm.dat\",col_names=FALSE) # Add some description of the rows...   row.names(pm.dat) <- c(\"Desc\",\"main\",\"sel\",\"ctl\",\"altFmsy\",\"cov\",\"wtage\",\"cpue\",\"temp\",\"q\")   pm.dat   pm.dat[1,] <- \"Updated_SSB0_to_proctune1\"   pm.dat[2,] <- \"../dat/pm_ssb0new.dat\"   writeLines(as.character(pm.dat$X1),\"runs/ssb0/pm.dat\")"},{"path":"https://afsc-assessments.github.io/ebswp/articles/Change_Model_Specs.html","id":"for-ssb1","dir":"Articles","previous_headings":"Example use of ebswp library for setting up a new model","what":"For SSB1","title":"Example on how to change and run a model","text":"","code":"#d1 <- read_dat(\"runs/dat/pm_avon2.dat\") d2 <- read_dat(\"runs/dat/pm_ssb1.dat\") d3            <- d2 d3$n_avo      <- d1$n_avo d3$ob_avo     <- d1$ob_avo d3$ob_avo_std <- d1$ob_avo_std d3$wt_avo     <- d1$wt_avo d3$yrs_avo    <- d1$yrs_avo  write_dat(output_file=\"runs/dat/pm_ssb1new.dat\", indata=d3)  # Create directory and copy key files dir.create(\"runs/ssb1\") file.copy(\"runs/ProcTune/control.dat\",\"runs/ssb1/\",overwrite = TRUE) file.copy(\"runs/avon2/compweights.ctl\",\"runs/ssb1/\",overwrite = TRUE) file.remove(\"runs/ssb1/pm\") file.symlink(\"../../src/pm\",\"runs/ssb1/pm\") # Read pm.dat, then write (e.g.,)   pm.dat<-read_table(\"runs/ProcTune/pm.dat\",col_names=FALSE) # Add some description of the rows...   pm.dat[1,] <- \"Updated_SSB1_to_proctune\"   pm.dat[2,] <- \"../dat/pm_ssb1new.dat\"   writeLines(as.character(pm.dat$X1),\"runs/ssb1/pm.dat\")"},{"path":"https://afsc-assessments.github.io/ebswp/articles/Change_Model_Specs.html","id":"and-ssb2","dir":"Articles","previous_headings":"Example use of ebswp library for setting up a new model","what":"And SSB2","title":"Example on how to change and run a model","text":"","code":"#d1 <- read_dat(\"runs/dat/pm_proctune1.dat\") d2 <- read_dat(\"runs/dat/pm_ssb2.dat\") d3            <- d2 d3$n_avo      <- d1$n_avo d3$ob_avo     <- d1$ob_avo d3$ob_avo_std <- d1$ob_avo_std d3$wt_avo     <- d1$wt_avo d3$yrs_avo    <- d1$yrs_avo  write_dat(output_file=\"runs/dat/pm_ssb2new.dat\", indata=d3)  # Create directory and copy key files dir.create(\"runs/ssb2\") file.copy(\"runs/ProcTune/control.dat\",\"runs/ssb2/\",overwrite = TRUE) file.copy(\"runs/avon2/compweights.ctl\",\"runs/ssb2/\",overwrite = TRUE) file.remove(\"runs/ssb2/pm\") file.symlink(\"../../src/pm\",\"runs/ssb2/pm\") # Read pm.dat, then write (e.g.,)   pm.dat<-read_table(\"runs/ProcTune/pm.dat\",col_names=FALSE) # Add some description of the rows...   pm.dat[1,] <- \"Updated_SSB2_to_proctune\"   pm.dat[2,] <- \"../dat/pm_ssb2new.dat\"   writeLines(as.character(pm.dat$X1),\"runs/ssb2/pm.dat\")"},{"path":"https://afsc-assessments.github.io/ebswp/articles/Change_Model_Specs.html","id":"and-obs-error-run","dir":"Articles","previous_headings":"Example use of ebswp library for setting up a new model","what":"And obs-error run","title":"Example on how to change and run a model","text":"","code":"d1 <- read_dat(\"runs/dat/pm_avon2.dat\") d2 <- read_dat(\"runs/dat/std_tune.dat\") d3            <- d2 d3$n_avo      <- d1$n_avo d3$ob_avo     <- d1$ob_avo d3$ob_avo_std <- d1$ob_avo_std d3$wt_avo     <- d1$wt_avo d3$yrs_avo    <- d1$yrs_avo  write_dat(output_file=\"runs/dat/obs_err_tune.dat\", indata=d3)  # Files already in \"tune\" dir file.remove(\"runs/tune/pm\") file.symlink(\"../../src/pm\",\"runs/tune/pm\") # Read pm.dat, then write (e.g.,)   pm.dat<-read_table(\"runs/tune/pm.dat\",col_names=FALSE) # Add some description of the rows...   pm.dat[1,] <- \"Obs_error_tuning\"   pm.dat[2,] <- \"../dat/obs_err_tune.dat\"   writeLines(as.character(pm.dat$X1),\"runs/tune/pm.dat\")"},{"path":"https://afsc-assessments.github.io/ebswp/articles/Change_Model_Specs.html","id":"now-run-them-all-in-parallel","dir":"Articles","previous_headings":"Example use of ebswp library for setting up a new model","what":"Now run them all in parallel","title":"Example on how to change and run a model","text":"","code":"mod_dir   <- c(\"ProcTune\",\"ssb0\",\"ssb1\",\"ssb2\")   mod_names <- c(\"Proc_error_Tune\",\"ssb0\",\"ssb1\",\"ssb2\")   # output=TRUE default, also check on spm   res <- run_model()   #res <- get_results()   tab_fit(res, mod_scen = c(1:2)) |> gt::gt()   tab_fit(res, mod_scen = c(1:4)) |> gt::gt()   tab_ref(res, mod_scen = c(1:4)) |> gt::gt() |> gt::fmt_markdown()      # See if different from base   tail(sc2)   ctl <-read_dat(\"runs/ProcTune/control.dat\")   ctlb <-read_dat(\"runs/base22/control.dat\")   diff <- purrr::map_lgl(names(ctl), ~ !identical(ctl[[.]], ctlb[[.]]))   sum(diff)   names(ctl[diff])   cbind(ctl[diff][2],ctlb[diff][2])   names(ctl)   ctl[56]   write_dat(\"runs/base22/control.dat\",ctl)  # Set an initial working directory   mod_names <- c(\"AVON Full\",\"Proc_tune\")   mod_dir <- c(\"avon2\", \"ProcTune\")   # Note, 0.2 CV for selectivity variability nails it (from base22)   # Read, adjust, write...   sc <-read_table(\"runs/dat/scmed22P.dat\",col_names = FALSE); names(sc) <- c(\"Year\",\"fsh\",\"bts\",\"ats\")   tail(sc )   # Iterated on selectivity   sc2 <-  sc |> mutate(ats = ifelse(ats>0,.138,0))   write.table(sc2,file=\"runs/dat/scmed22P.dat\",col.names = FALSE,row.names = FALSE)   #modtune <- run_model(Output=TRUE)   modtune<-get_results()   tab_fit(modtune, mod_scen = c(1,2)) |> gt::gt()   tab_ref(modtune, mod_scen = c(1,2)) |> gt::gt()   tab_ref(modlst, mod_scen = c(4,5)) |> gt::gt()   (modlst[[4]]$nextyrssbs)   (modlst[[4]]$nextyrssb.sd)   (modtune[[1]]$nextyrssbs)   names(modtune)"},{"path":[]},{"path":"https://afsc-assessments.github.io/ebswp/articles/Model-equations.html","id":"dynamics","dir":"Articles","previous_headings":"EBS Pollock Model Description","what":"Dynamics","title":"EBS pollock model equations","text":"assessment based statistical age-structured model catch equation population dynamics model described Fournier Archibald (1982) elsewhere (e.g., Hilborn Walters 1992, Schnute Richards 1995, McAllister Ianelli 1997). catch numbers age year t(Ct,)t (C_{t,}) total catch biomass (Yt)(Y_t) can described : Ct,=Ft,aZt,(1‚àíe‚àíZt,)Nt,,1‚â§t‚â§T,1‚â§‚â§ANt+1,+1=Nt,‚àí1e‚àíZt,‚àí11‚â§t‚â§T,1‚â§<ANt+1,=Nt,‚àí1e‚àíZt,‚àí1+Nt,Ae‚àíZt,,1‚â§t‚â§TZt,=Ft,+Mt,aCt,.=‚àë=1ACt,apt,=Ct,aCt,.Yt=‚àë=1Awt,aCt,\\begin{align}     C_{t,}     &= \\frac{F_{t,}}{Z_{t,}} \\left(1 - e^{-Z_{t,}}\\right) N_{t,}, &1 \\le t \\le T, 1 \\le \\le \\\\     N_{t+1,+1} &= N_{t,-1} e^{-Z_{t,-1}}                                       &1 \\le t \\le T, 1 \\le <   \\\\     N_{t+1,}   &= N_{t,-1} e^{-Z_{t,-1}} + N_{t,} e^{-Z_{t,}} ,              &1 \\le t \\le T                \\\\     Z_{t,}     &= F_{t,} + M_{t,}                                                                            \\\\     C_{t,.}     &= \\sum_{=1}^{C_{t,}}                                                                        \\\\     p_{t,}     &= \\frac{C_{t,} } {C_{t,.} }                                                                   \\\\     Y_{t}       &= \\sum_{=1}^{w_{t,}C_{t,}}                                                                 \\\\ \\end{align} Fishing mortality (Ft,aF_{t,}) specified semi-separable non-parametric form restrictions variability following Butterworth et al.¬†(2003): Ft,=st,aŒºfeœµt,œµt‚àºùí©(0,œÉE2)st+1,=st,aeŒ≥t,Œ≥t‚àºùí©(0,œÉs2)\\begin{align}     F_{t,}     &= s_{t,} \\, \\mu^f e^{\\epsilon_t}, &\\epsilon_t   \\sim \\mathcal{N}(0,\\,\\sigma_E^{2}) \\\\     s_{t+1,}   &= s_{t,} \\,       e^{\\gamma_t},   &\\gamma_t     \\sim \\mathcal{N}(0,\\,\\sigma_s^{2})  \\end{align} st,as_{t,} selectivity age class aa year tt, Œºf\\mu^f median fishing mortality rate time. selectivities (st,as_{t,}) constant time fishing mortality rate decomposes age component year component. curvature penalty selectivity coefficients using squared second-differences provide smoothness ages. Bottom-trawl survey selectivity set asymptotic yet retain properties desired characteristics gear. Namely, function allow flexibility selecting age 1 pollock time. functional form selectivity : st,=[1+e‚àíŒ±ta‚àíŒ≤t]‚àí1,>1st,=Œºse‚àíŒ¥tŒº,=1Œ±t=Œ±‚ÄæeŒ¥tŒ±,Œ≤t=Œ≤‚ÄæeŒ¥tŒ≤,\\begin{align}     s_{t,}     &= \\left[ 1+e^{-\\alpha_ta-\\beta_t} \\right]^{-1} , & >1 \\\\     s_{t,}     &= \\mu_se^{-\\delta^\\mu_t},                        & =1 \\\\     \\alpha_{t}  &= \\bar \\alpha e^{\\delta^\\alpha_t},                     \\\\     \\beta_{t}  &= \\bar \\beta e^{\\delta^\\beta_t},                         \\end{align} parameters selectivity function follow random walk process Dorn et al.¬†(2000): Œ¥tŒº‚àíŒ¥t+1Œº‚àºùí©(0,œÉŒ¥Œº2)Œ±tŒº‚àíŒ±t+1Œº‚àºùí©(0,œÉŒ±Œº2)Œ≤tŒº‚àíŒ≤t+1Œº‚àºùí©(0,œÉŒ≤Œº2)\\begin{align}     \\delta_t^\\mu  -  \\delta_{t+1}^\\mu     &\\sim \\mathcal{N}(0,\\,\\sigma_{\\delta^\\mu}^{2}) \\\\     \\\\     \\alpha_t^\\mu  -  \\alpha_{t+1}^\\mu     &\\sim \\mathcal{N}(0,\\,\\sigma_{\\alpha^\\mu}^{2}) \\\\     \\beta_t^\\mu  -  \\beta_{t+1}^\\mu     &\\sim \\mathcal{N}(0,\\,\\sigma_{\\beta^\\mu}^{2})  \\end{align} parameters estimated part model thus t=1982 2022. variance terms process error parameters specified 0.04. assessment, random-walk deviation penalty optionally shifted changes log-selectivity. , BTS estimates, process error applied logistic parameters , lognormal penalty applied resulting selectivities--age directly. extent variability evaluated context impact age-specific survey catchability/availability contrasted independent estimate pollock availability bottom trawl survey. ln(st,)‚àíln(st+1,)‚àºùí©(0,œÉsel2)\\begin{align}     {ln(s_{t,})}  -  {ln(s_{t+1,})}  &\\sim \\mathcal{N}(0,\\,\\sigma_{sel}^{2}) \\\\ \\end{align} 2008 survey selectivity approach modified. option, age one pollock observed trawl can treated index considered part age composition (ranges age 2-15). done improve interaction flexible selectivity smoother used gear compared. Additionally, annual specification input observation variance terms allowed data. diagnostic approach evaluate input variance specifications (via sample size multinomial assumptions) added 2018 assessment. method uses residuals mean ages together concept sample variance mean age (given annual data set) varies inversely input sample size. can shown given set input proportions age (maximum age AA) sample size NtN_t year tt, adjustment factor ŒΩ\\nu input sample size can computed compared assessment model predicted proportions age (pÃÇta\\hat p_{ta}) model predicted mean age (‚ÄæÃÇ\\hat{\\bar{a_t}}): ŒΩ=var(rtaNtŒ∫t)‚àí1rta=‚Äæt‚àí‚ÄæÃÇŒ∫t=[‚àëaAa‚Äæt‚àí‚ÄæÃÇ]0.5\\begin{align} \\nu   &= \\text{var}\\left( r^a_t \\sqrt{\\frac{N_t}{\\kappa_t} }\\right)^{-1} \\\\ r^a_t &= \\bar a_t - \\hat{\\bar{a_t}}                                      \\\\ \\kappa_t &= \\left[ \\sum_a^{\\bar a_t - \\hat{\\bar{a_t}}} \\right]^{0.5} \\end{align} rtar^a_t residual mean age ‚ÄæÃÇ=‚àëaAapÃÇtaa‚Äæt=‚àëaAapta\\begin{align} \\hat{\\bar{a_t}} &= \\sum_a^{\\hat p_{ta}}\\, \\\\ {\\bar a_t}      &= \\sum_a^{p_{ta}}\\,  \\end{align} Based previous analyses, used relationship diagnostic evaluating input sample sizes comparing model predicted mean ages observed mean ages implied 95% confidence bands. method provided support modifying frequency allowing selectivity changes.","code":""},{"path":"https://afsc-assessments.github.io/ebswp/articles/Model-equations.html","id":"recruitment","dir":"Articles","previous_headings":"EBS Pollock Model Description","what":"Recruitment","title":"EBS pollock model equations","text":"analyses, recruitment (RtR_t) represents numbers age-1 individuals modeled stochastic function spawning stock biomass. Rt=f(Bt‚àí1)\\begin{align}         R_t = f\\left(B_{t-1} \\right) \\end{align} mature spawning biomass year tt defined : Bt=‚àë=1Awt,aœïaNt,\\begin{align}   B_t = \\sum_{=1}^{ w_{t,}\\phi_aN_{t,}}  \\end{align} , œïa\\phi_a proportion mature females age shown sub-section titled Natural mortality maturity age ‚ÄúParameters estimated independently‚Äù . reparameterized form stock-recruitment relationship following Francis (1992) used. optional Beverton-Holt form (Ricker form presented Eq. 12 adopted assessment) : Rt=Bt‚àí1eŒµtŒ±+Œ≤Bt‚àí1\\begin{align} R_t &= \\frac{B_{t-1}e^{\\varepsilon_t} }{\\alpha+\\beta B_{t-1} } \\end{align} Values stock-recruitment function parameters calculated values (number 0-year-olds absence exploitation recruitment variability) steepness stock-recruit relationship (hh). steepness fraction R0 expected (absence recruitment variability) mature biomass reduced 20% pristine level (Francis 1992), : Œ±=BÃÉ01‚àíh4hŒ≤=5h‚àí14hR0\\begin{align}  \\alpha &= \\tilde B_0 \\frac{1-h}{4h} \\\\  \\beta &= \\frac{5h-1}{4hR_0 }  \\end{align} BÃÉ0\\tilde B_0 total egg production (proxy, e.g., female spawning biomass) absence exploitation (recruitment variability) expressed fraction R0R_0. interpretation explanation follows. steepness equal 0.2, recruits linear function spawning biomass (implying surplus production). steepness equal 1.0, recruitment constant levels spawning stock size. value h=0.9h = 0.9 implies 20% unfished spawning stock size result expected value 90% unfished recruitment level. Steepness 0.7 commonly assumed default value Beverton-Holt form (e.g., Kimura 1988). prior distribution steepness used beta distribution Ianelli et al.¬†(2016). prior steepness specified symmetric form Beta distribution Œ±=Œ≤=14.93\\alpha = \\beta = 14.93 implying prior mean 0.5 CV 12% (implying 14% chance steepness greater 0.6). conservative prior consistent previous years‚Äô application serves constrain stock-recruitment curve favoring steep slopes (uninformative priors result FMSYF_{MSY} values near FSPRF_{SPR} F18%F_{18\\%} value considerably higher default proxy F35%F_{35\\%}). residual pattern post-1977 recruits used fitting curve diffuse prior resulted estimated recruits curve stock sizes less BMSYB_{MSY} (except 1978 year class). believe driven primarily apparent negative-slope recruits relative stock sizes BMSYB_{MSY} , provides potentially unrealistic estimate productivity low stock sizes. prior elicited rationale residuals reasonably balanced throughout range spawning stock sizes. Whereas somewhat circular (.e., using data prior elicitation), point residual patterns (typically ignored types models) qualitatively considered. model 16.1 (2019 assessment), Beverton Holt stock recruitment form implemented using prior value 0.67 steepness CV 0.17. resulted beta distribution parameters (prior) Œ±=6.339\\alpha = 6.339 andŒ≤=4.293\\beta = 4.293. value œÉR\\sigma_R set 1.0 accommodate additional uncertainty factors affecting recruitment variability. critical value stock-recruitment function (steepness, h) scale Ricker model, begin parameterization Kimura (1990): Rt=Bt‚àí1eŒ±(1‚àíBt‚àí1R0œà0)œà0\\begin{align} R_t &= \\frac{B_{t-1}e^{\\alpha \\left(1-B_{t-1} \\frac{R_0}{\\psi_0} \\right)}}{\\psi_0} \\end{align} can shown Ricker parameter maps steepness : h=eŒ±eŒ±+4\\begin{align} h &= \\frac{e^\\alpha}{e^\\alpha+4} \\end{align} prior used h can implemented Ricker Beverton-Holt stock-recruitment forms. term œà0\\psi_0 represents equilibrium unfished spawning biomass per-recruit.","code":""},{"path":"https://afsc-assessments.github.io/ebswp/articles/Model-equations.html","id":"diagnostics","dir":"Articles","previous_headings":"EBS Pollock Model Description","what":"Diagnostics","title":"EBS pollock model equations","text":"2006 replay feature added time series recruitment estimates particular model used compute subsequent abundance expectation fishing occurred. recruitments adjusted original estimates ratio expected recruitment given spawning biomass (without fishing) estimated stock-recruitment curve. .e., recruitment fishing modified : Rt‚Ä≤=RÃÇtf(Bt‚àí1‚Ä≤)f(Bt‚àí1)R_t' = \\hat{R}_t\\frac{f(B_{t-1}')}{f(B_{t-1})} RtR_t original recruitment estimate year tt Bt‚àí1‚Ä≤B_{t-1}' Bt‚àí1B_{t-1} representing stock-recruitment function given spawning biomass fishing estimated fishing intensity, respectively. assessment model code allows retrospective analyses (e.g., Parma 1993, Ianelli Fournier 1998). designed assist specifying spawning biomass patterns (uncertainty) changed due new data. retrospective approach simply uses current model evaluate may change time addition new data based evolution data collected past several years.","code":""},{"path":"https://afsc-assessments.github.io/ebswp/articles/Model-equations.html","id":"parameter-estimation","dir":"Articles","previous_headings":"EBS Pollock Model Description","what":"Parameter estimation","title":"EBS pollock model equations","text":"objective function simply sum negative log-likelihood function logs prior distributions. fit large numbers parameters nonlinear models useful able estimate certain parameters different stages. ability estimate stages also important using robust likelihood functions since often undesirable use robust objective functions models far solution. Consequently, early stages estimation use following log- likelihood function survey fishery catch age data (numbers): nll()=n‚àët,aptalnpÃÇtapta=Ota‚àëaOtapÃÇta=CÃÇta‚àëaCÃÇtaùêÇ=ùêÇùêÑùêÑ=b1,1b1,2‚Ä¶b1,15b2,1b2,2b2,15‚ãÆ‚ã±‚ãÆb15,1b15,2‚Ä¶b15,15\\begin{align} nll() &= n \\sum_{t,}{ p_{ta} \\ln \\hat p_{ta} } \\\\ p_{ta} &= \\frac{O_{ta}}{\\sum_a{O_{ta}}} \\hspace{20pt}  \\hat p_{ta} = \\frac{\\hat C_{ta}}{\\sum_a{\\hat C_{ta}}} \\\\ \\mathbf{C} &= \\mathbf{CE}  \\\\ \\mathbf{E}  &=  \\begin{array}{llll}  b_{1,1} & b_{1,2} & \\dots & b_{1,15} \\\\ b_{2,1} & b_{2,2} &       & b_{2,15} \\\\ \\vdots &         & \\ddots &  \\vdots \\\\ b_{15,1} & b_{15,2} & \\dots      & b_{15,15}  \\end{array}   \\end{align} AA, TT, represent number age classes years, respectively, n sample size, represent observed predicted numbers age catch. elements bi,j represent ageing mis-classification proportions based independent agreement rates otolith age readers. models presented year, option including aging errors re-evaluated. Sample size values revised shown main document. Strictly speaking, amount data collected fishery indicates higher values might warranted. However, standard multinomial sampling process robust violations assumptions (Fournier et al.¬†1990). Consequently, model fit approached solution, invoke robust likelihood function fit proportions age : ‚àè=1A‚àèt=1T[(exp(‚àí(pta‚àípÃÇta)22(Œ∑ta+0.1/)œÑt2)+0.01)√ó12œÄ(Œ∑ta+0.1/)œÑt]\\begin{align} \\prod_{=1}^\\prod_{t=1}^T \\left[\\left( \\exp{\\left(-\\frac{\\left(p_{ta}-\\hat p_{ta}\\right)^2}{2\\left(\\eta_{ta}+0.1/\\right)\\tau_t^2} \\right) }+0.01 \\right) \\times  \\frac{1}{ {\\sqrt{2\\pi \\left ( \\eta_{ta}+0.1/\\right) \\tau_t}} } \\right] \\end{align} Taking logarithm obtain log-likelihood function age composition data: nll()=‚àí0.5‚àë=1A‚àët=1Tln2œÄ(Œ∑ta+0.1/)‚àí‚àëtTAlnœÑt+‚àë=1A‚àët=1Tln{exp(‚àí(pta‚àípÃÇta)2(2Œ∑ta+0.1/)œÑt2)+0.01}\\begin{align} nll() = -0.5\\sum_{=1}^\\sum_{t=1}^T{ {\\ln{2\\pi \\left( \\eta_{ta}+0.1/\\right)  -\\sum_t^T \\ln\\tau_t}} }  +\\sum_{=1}^\\sum_{t=1}^T{\\ln\\left\\{ \\exp{\\left(-\\frac{\\left(p_{ta}-\\hat p_{ta}\\right)^2}{\\left(2\\eta_{ta}+0.1/\\right)\\tau_t^2} \\right) + 0.01 }  \\right\\}} \\end{align} Œ∑ta=pta(1‚àípta)andœÑt2=1/nt\\begin{align} \\eta_{ta} &=  p_{ta}(1-p_{ta})\\\\  \\text{} \\\\ \\tau_t^2 &=  1/n_t  \\end{align} gives variance ptap_{ta}(Œ∑ta+0.1/)œÑt2\\begin{align} (\\eta_{ta}+0.1/)\\tau_t^2 \\end{align} Completing estimation fashion reduces model sensitivity data otherwise considered outliers. Within model, predicted survey abundance accounted within-year mortality since surveys occur middle year. previous years, assumed removals survey insignificant (.e., mortality pollock caused survey considered insignificant). Consequently, set analogous catchability selectivity terms estimated fitting survey observations : NÃÇtas=e‚àí0.5ZtaNtaqtsstaS\\begin{align} \\hat N_{ta}^s &= e^{-0.5Z_{ta}}N_{ta}q_t^ss_{ta}^S \\end{align} superscript s indexes type survey (BTS). option use survey predictions biomass terms instead just abundance, modified include observed survey biomass weights--age: NÃÇtas=e‚àí0.5ZtawtaNtaqtsstaS\\begin{align} \\hat N_{ta}^s &= e^{-0.5Z_{ta}}w_{ta}N_{ta}q_t^ss_{ta}^S \\end{align} AVO index, values selectivity assumed survey mean weights age time also assumed equal values estimated survey. analyses chose keep survey catchabilities constant time (though estimated separately AVO index bottom trawl surveys). contribution negative log-likelihood function (ignoring constants) surveys given either lognormal distribution: nll()=‚àëtln(uts/NÃÇts)22œÉs,t2\\begin{align} nll() &= \\sum_t{\\frac{\\ln(u_t^s/\\hat N_t^s)^2}{2\\sigma_{s,t}^2}} \\end{align} utsu_t^s total (numerical abundance optionally biomass) estimate variance œÉs,t\\sigma_{s,t} survey ss year tt optionally, normal distribution can selected: nll()=‚àët(uts‚àíNÃÇts)22œÉs,t2.\\begin{align} nll() &= \\sum_t{\\frac{(u_t^s - \\hat N_t^s)^2}{2\\sigma_{s,t}^2}}. \\\\ \\end{align} survey AVO index modeled using lognormal distribution whereas BTS survey, normal distribution applied. model configurations BTS data corrected estimated efficiency, multivariate lognormal distribution used. negative- log likelihood component modeled nlli=0.5ùêóŒ£‚àí1ùêó‚Ä≤\\begin{equation} nll_i = 0.5\\mathbf{X}\\Sigma^{-1}\\mathbf{X}^{'} \\end{equation} vector observed minus model predicted values index Œ£\\Sigma estimated covariance matrix provided method provided Kotwicki et al.¬†2014. VAST estimates, supplied covariance matrix used way. contribution negative log-likelihood function observed total catch biomass (Cbobs,CbÃÇC_b^{obs}, \\hat{C_b}) fishery given nlli=0.5‚àëtln(Cbobs/CÃÇb)22œÉCb,t2\\begin{equation} nll_i = 0.5\\sum_t\\frac{\\ln(C_b^{obs}/\\hat C_b)^2}{2\\sigma_{C_b,t}^2} \\end{equation} œÉCb,t\\sigma_{C_b,t} pre-specified (set 0.05) reflecting accuracy overall observed catch biomass. Similarly, contribution prior distributions (negative log-density) log-likelihood function include ŒªŒµ‚àëtŒµt2+ŒªŒ≥‚àëtaŒ≥2+ŒªŒ¥‚àëtŒ¥t2\\lambda_\\varepsilon \\sum_t\\varepsilon_t^2 +\\lambda_\\gamma \\sum_{ta}\\gamma^2 +  \\lambda_\\delta \\sum_t\\delta_t^2 size ‚Äôs represent prior assumptions variances random variables. parameters associated year-- year age specific deviations selectivity coefficients. presentation type Bayesian approach modeling errors-- variables, reader referred Schnute (1994). facilitate estimating large number parameters, automatic differentiation software extended Greiwank Corliss (1991) developed C++ class libraries used. software provided derivative calculations needed finding posterior mode via quasi-Newton function minimization routine (e.g., Press et al.¬†1992). model implementation language (ADModel Builder) gave simple rapid access routines provided ability estimate variance-covariance matrix dependent independent parameters interest.","code":""},{"path":"https://afsc-assessments.github.io/ebswp/articles/Model-equations.html","id":"uncertainty-in-mean-body-mass","dir":"Articles","previous_headings":"EBS Pollock Model Description","what":"Uncertainty in mean body mass","title":"EBS pollock model equations","text":"approach use solve FMSYF_{MSY} related quantities (e.g., BMSYB_{MSY}MSYMSY) within general integrated model context shown Ianelli et al.¬†(2001). 2007 modified include uncertainty weight--age explicit part uncertainty FMSYF_{MSY} calculations. involved estimating vector parameters (wtafuturew_{ta}^{future}) current (2022) future mean weights age ii, ii= (1, 2,‚Ä¶,15), given actual observed mean variances weight--age period 1991-2021. values based available data (option selected) estimates parameters subject natural constraint: wtafuture‚àºùí©(wa‚Äæ,œÉwa2)w_{ta}^{future} \\sim \\mathcal{N}(\\bar{w_{}},\\,\\sigma_{w_a}^{2}) Note converges mean values time series data (likelihood component within model affected future mean weights--age) retaining natural uncertainty can propagate estimates FMSYF_{MSY} uncertainty. latter point essentially requirement Tier 1 categorization. Subsequently, method refined account current-year survey data cohort year effects. model : wÃÇta=w‚ÄæaeœÖta=1,t‚â•1964wÃÇta=wÃÇt‚àí1,‚àí1+Œîaeœàta>1,t>1964Œîa=w‚Äæ+1‚àíw‚Äæaa<Aw‚Äæ=Œ±{L1+(L2‚àíL1)(1‚àíKa‚àí11‚àíKA‚àí1)}3\\begin{align} \\hat{w}_{ta} &= \\bar w_a e^{\\upsilon_t} & =1, \\, t \\ge 1964 \\\\ \\hat{w}_{ta} &= \\hat{w}_{t-1,-1} + \\Delta_a e^{\\psi_t} & > 1, \\, t > 1964 \\\\ \\Delta_a     &= \\bar w_{+1} - \\bar w_a & < \\\\ \\bar w_a     &= \\alpha \\left\\{L_1+ \\left(L_2-L_1\\right)\\left(\\frac{1-K^{-1}}{1-K^{-1}}\\right)\\right\\}^3  \\\\ \\end{align} fixed effects parameters L1,L2,K,L_1, L_2, K, Œ±\\alpha random effects parameters œÖt\\upsilon_t œàt\\psi_t.","code":""},{"path":"https://afsc-assessments.github.io/ebswp/articles/Model-equations.html","id":"tier-1-projections","dir":"Articles","previous_headings":"EBS Pollock Model Description","what":"Tier 1 projections","title":"EBS pollock model equations","text":"Tier 1 projections calculated two ways. First, 2023 2024 ABC OFLOFL levels, harmonic mean FMSYF_{MSY} value computed analogous harvest rate (uHM‚Äæ\\bar{u_{HM}}) applied estimated geometric mean fishable biomass BMSYB_{MSY} : ABCt=BGM,tfuÃÇHMŒ∂tBGM,tf=elnBÃÇtf‚àí0.5œÉBf2uHM,tf=elnuÃÇMSY,t‚àí0.5œÉuMSY2Œ∂t=Bt/BMSY‚àí0.051‚àí0.05Bt<BMSYŒ∂t=1.0Bt‚â•BMSY\\begin{align} ABC_t &= B_{GM,t}^f \\hat{u}_{HM}\\zeta_t \\\\ B_{GM,t}^f &= e^{\\ln{\\hat{B}_t^f}-0.5\\sigma_{B^f}^2} \\\\ u_{HM,t}^f &= e^{\\ln{\\hat{u}_{MSY,t}}-0.5\\sigma_{u_{MSY}}^2} \\\\ \\zeta_{t} &= \\frac{B_t/B_{MSY}-0.05}{1-0.05} & B_t < B_{MSY} \\\\ \\zeta_{t} &= 1.0 & B_t \\ge  B_{MSY}  \\end{align} BÃÇtf\\hat{B}_t^f point estimate fishable biomass defined (given year): ‚àëaNastawta\\sum_a{N_as_{ta}w_{ta}} NtaN_{ta}, stas_{ta}, wtaw_{ta} estimated population numbers (begin year), selectivity weights--age, respectively. BMSYB_{MSY} BtB_{t} point estimates spawning biomass levels equilibrium FMSYF_{MSY} year tt (time spawning). projections, catch must specified (solved current year Bt<BMSYB_t < B_{MSY}). longer term projections form operating model (presented evaluation B20%B_{20\\%}) feedback (via future catch specifications) using control rule assessment model required.","code":""},{"path":"https://afsc-assessments.github.io/ebswp/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jim Ianelli. Author, maintainer.","code":""},{"path":"https://afsc-assessments.github.io/ebswp/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Ianelli J (2025). ebswp: Facilitates Model Running EBS Pollock. R package version 0.0.1.0000, http://afsc-assessments.github.io/EBSwp/, http://afsc-assessments.github.io/ebswp/, https://afsc-assessments.github.io/ebs_pollock/, http://afsc-assessments.github.io/EBSpollock/.","code":"@Manual{,   title = {ebswp: Facilitates Model Running for EBS Pollock},   author = {Jim Ianelli},   year = {2025},   note = {R package version 0.0.1.0000, http://afsc-assessments.github.io/EBSwp/, http://afsc-assessments.github.io/ebswp/, https://afsc-assessments.github.io/ebs_pollock/},   url = {http://afsc-assessments.github.io/EBSpollock/}, }"},{"path":"https://afsc-assessments.github.io/ebswp/index.html","id":"east-bering-sea-pollock-","dir":"","previous_headings":"","what":"Facilitates Model Running for EBS Pollock","title":"Facilitates Model Running for EBS Pollock","text":"R package ebswp developed stock assessments eastern Bering Sea walleye pollock AFSC. stock assessment model coded using Autodif Model Builder (ADMB) software. Note: full commit history including SAFE chapter can found repo used 2023 (earlier) assessments 2024 future assessments, library ebswp used SAFE report chapter model runs ","code":""},{"path":"https://afsc-assessments.github.io/ebswp/index.html","id":"cloning-this-repository-optional","dir":"","previous_headings":"","what":"Cloning this repository (optional)","title":"Facilitates Model Running for EBS Pollock","text":"R package ebswp lives private GitHub repository. repository can cloned computer command line using user interface. command line using Linux repository can cloned using:","code":"git clone https://github.com/afsc-assessments/ebswp"},{"path":"https://afsc-assessments.github.io/ebswp/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Facilitates Model Running for EBS Pollock","text":"several options installing ebswp R package.","code":""},{"path":"https://afsc-assessments.github.io/ebswp/index.html","id":"option-1","dir":"","previous_headings":"Installation","what":"Option 1","title":"Facilitates Model Running for EBS Pollock","text":"ebswp package can installed within R using:","code":"devtools::install_github(repo = \"afsc-assessments/ebswp\", dependencies = TRUE,                           build_vignettes = TRUE, auth_token = \"your_PAT\")"},{"path":"https://afsc-assessments.github.io/ebswp/index.html","id":"option-2","dir":"","previous_headings":"Installation","what":"Option 2","title":"Facilitates Model Running for EBS Pollock","text":"GitHub repository can cloned computer package installed command line. Linux involve:","code":"git clone https://github.com/afsc-assessments/ebswp R CMD INSTALL ebswp"},{"path":"https://afsc-assessments.github.io/ebswp/index.html","id":"option-3","dir":"","previous_headings":"Installation","what":"Option 3","title":"Facilitates Model Running for EBS Pollock","text":"time within R using:","code":"devtools::install(\"ebswp\")"},{"path":"https://afsc-assessments.github.io/ebswp/index.html","id":"help","dir":"","previous_headings":"","what":"Help","title":"Facilitates Model Running for EBS Pollock","text":"Help ebswp functions data sets can found R help pages associated function data set. Help specific function can viewed using ?function_name, example: Alternatively, see list available functions data sets use:","code":"?run_model ?tab_fit ?plot_sel help(package = \"ebswp\")"},{"path":"https://afsc-assessments.github.io/ebswp/index.html","id":"examples","dir":"","previous_headings":"","what":"Examples","title":"Facilitates Model Running for EBS Pollock","text":"package vignettes great place see ebswp can . can view package vignettes within R using:","code":"browseVignettes(package = \"ebswp\") vignette(topic = \"ebswp\", package = \"ebswp\")"},{"path":"https://afsc-assessments.github.io/ebswp/index.html","id":"website","dir":"","previous_headings":"","what":"Website","title":"Facilitates Model Running for EBS Pollock","text":"vignettes help pages function bundled together published website https://afsc-assessments.github.io/ebswp/.","code":""},{"path":"https://afsc-assessments.github.io/ebswp/index.html","id":"developers","dir":"","previous_headings":"","what":"Developers","title":"Facilitates Model Running for EBS Pollock","text":"Developers want things slightly differently. See Model development vignette.","code":""},{"path":"https://afsc-assessments.github.io/ebswp/index.html","id":"acronymns","dir":"","previous_headings":"","what":"Acronymns","title":"Facilitates Model Running for EBS Pollock","text":"NOAA: National Oceanic Atmospheric Administration NMFS: National Marine Fisheries Service AFSC: Alaska Fisheries Science Center REFM: Resource Ecology Fisheries Management","code":""},{"path":"https://afsc-assessments.github.io/ebswp/index.html","id":"noaa-readme","dir":"","previous_headings":"","what":"NOAA README","title":"Facilitates Model Running for EBS Pollock","text":"repository scientific product official communication National Oceanic Atmospheric Administration, United States Department Commerce. NOAA GitHub project code provided ‚Äò‚Äô basis user assumes responsibility use. claims Department Commerce Department Commerce bureaus stemming use GitHub project governed applicable Federal law. reference specific commercial products, processes, services service mark, trademark, manufacturer, otherwise, constitute imply endorsement, recommendation favoring Department Commerce. Department Commerce seal logo, seal logo DOC bureau, shall used manner imply endorsement commercial product activity DOC United States Government.","code":""},{"path":"https://afsc-assessments.github.io/ebswp/index.html","id":"noaa-license","dir":"","previous_headings":"","what":"NOAA License","title":"Facilitates Model Running for EBS Pollock","text":"Software code created U.S. Government employees subject copyright United States (17 U.S.C. ¬ß105). United States/Department Commerce reserve rights seek obtain copyright protection countries United States Software authored entirety Department Commerce. end, Department Commerce hereby grants Recipient royalty-free, nonexclusive license use, copy, create derivative works Software outside United States.  U.S. Department Commerce | National Oceanographic Atmospheric Administration | NOAA Fisheries","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/dot-get_Nage_3_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Numbers at age 3 ‚Äî .get_Nage_3_df","title":"Extract Numbers at age 3 ‚Äî .get_Nage_3_df","text":"Extract Numbers age 3","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/dot-get_Nage_3_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Numbers at age 3 ‚Äî .get_Nage_3_df","text":"","code":".get_Nage_3_df(M)"},{"path":"https://afsc-assessments.github.io/ebswp/reference/dot-get_Nage_3_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Numbers at age 3 ‚Äî .get_Nage_3_df","text":"M list object created read_admb function","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/dot-get_Nage_3_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Numbers at age 3 ‚Äî .get_Nage_3_df","text":"dataframe age3+ biomass","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/dot-get_R_rel_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Recruits (R) from pollock run ‚Äî .get_R_rel_df","title":"Extract Recruits (R) from pollock run ‚Äî .get_R_rel_df","text":"Extract Recruits (R) pollock run","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/dot-get_R_rel_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Recruits (R) from pollock run ‚Äî .get_R_rel_df","text":"","code":".get_R_rel_df(M, rel = TRUE)"},{"path":"https://afsc-assessments.github.io/ebswp/reference/dot-get_R_rel_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Recruits (R) from pollock run ‚Äî .get_R_rel_df","text":"M list object created read_admb function","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/dot-get_R_rel_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Recruits (R) from pollock run ‚Äî .get_R_rel_df","text":"dataframe spawning biomass","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/dot-get_ats_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Acoustic Trawl Survey Data ‚Äî .get_ats_df","title":"Extract Acoustic Trawl Survey Data ‚Äî .get_ats_df","text":"Extracts data either biomass metric based given  models list M. function formats data consistent structure processing.","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/dot-get_ats_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Acoustic Trawl Survey Data ‚Äî .get_ats_df","text":"","code":".get_ats_df(M, biomass = TRUE)"},{"path":"https://afsc-assessments.github.io/ebswp/reference/dot-get_ats_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Acoustic Trawl Survey Data ‚Äî .get_ats_df","text":"M list  model outputs. item contain least elements yr_ats, ob_ats, eb_ats, sd_ob_ats, ot_ats, et_ats, sd_ot_ats. biomass logical flag. TRUE, data extracted biomass; FALSE, data another metric extracted. Default TRUE.","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/dot-get_ats_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Acoustic Trawl Survey Data ‚Äî .get_ats_df","text":"dataframe columns: year, Model, obs, pre, lb, ub.","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/dot-get_avo_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Get avo data into frame ‚Äî .get_avo_df","title":"Get avo data into frame ‚Äî .get_avo_df","text":"function iterates list models extracts year associated measurements.","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/dot-get_avo_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get avo data into frame ‚Äî .get_avo_df","text":"","code":".get_avo_df(M)"},{"path":"https://afsc-assessments.github.io/ebswp/reference/dot-get_avo_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get avo data into frame ‚Äî .get_avo_df","text":"M list models model needed attributes. biomass Logical indicating biomass data used. FALSE, measurements used.","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/dot-get_avo_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get avo data into frame ‚Äî .get_avo_df","text":"data frame columns year, model, observed values, predicted values, lower bounds, upper bounds.","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/dot-get_bts_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract bottom trawl survey data from a list of models ‚Äî .get_bts_df","title":"Extract bottom trawl survey data from a list of models ‚Äî .get_bts_df","text":"function iterates list models extracts year associated measurements.","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/dot-get_bts_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract bottom trawl survey data from a list of models ‚Äî .get_bts_df","text":"","code":".get_bts_df(M, biomass = TRUE)"},{"path":"https://afsc-assessments.github.io/ebswp/reference/dot-get_bts_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract bottom trawl survey data from a list of models ‚Äî .get_bts_df","text":"M list models model needed attributes. biomass Logical indicating biomass data used. FALSE, measurements used.","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/dot-get_bts_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract bottom trawl survey data from a list of models ‚Äî .get_bts_df","text":"data frame columns year, model, observed values, predicted values, lower bounds, upper bounds.","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/dot-get_cope_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract copE data ‚Äî .get_cope_df","title":"Extract copE data ‚Äî .get_cope_df","text":"Extract copE data","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/dot-get_cope_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract copE data ‚Äî .get_cope_df","text":"","code":".get_cope_df(M)"},{"path":"https://afsc-assessments.github.io/ebswp/reference/dot-get_cope_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract copE data ‚Äî .get_cope_df","text":"M list object created read_admb function","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/dot-get_cope_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract copE data ‚Äî .get_cope_df","text":"dataframe spawning biomass","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/dot-get_cpue_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract CPUE data ‚Äî .get_cpue_df","title":"Extract CPUE data ‚Äî .get_cpue_df","text":"Extract CPUE data","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/dot-get_cpue_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract CPUE data ‚Äî .get_cpue_df","text":"","code":".get_cpue_df(M)"},{"path":"https://afsc-assessments.github.io/ebswp/reference/dot-get_cpue_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract CPUE data ‚Äî .get_cpue_df","text":"M list object created read_admb function","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/dot-get_cpue_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract CPUE data ‚Äî .get_cpue_df","text":"dataframe observed predicted CPUE","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/dot-get_like_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Likelihood Data Frame ‚Äî .get_like_df","title":"Extract Likelihood Data Frame ‚Äî .get_like_df","text":"function extracts likelihood values list models formats structured data frame.","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/dot-get_like_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Likelihood Data Frame ‚Äî .get_like_df","text":"","code":".get_like_df(M)"},{"path":"https://afsc-assessments.github.io/ebswp/reference/dot-get_like_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Likelihood Data Frame ‚Äî .get_like_df","text":"M list models model contains likelihood components.","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/dot-get_like_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Likelihood Data Frame ‚Äî .get_like_df","text":"data frame containing likelihood components, model name, natural mortality value (M), negative log likelihood (NLL) model list.","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/dot-get_like_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Likelihood Data Frame ‚Äî .get_like_df","text":"","code":"# Assuming 'model_list' is a list of models with the appropriate structure # likelihood_df <- .get_like_df(model_list)"},{"path":"https://afsc-assessments.github.io/ebswp/reference/dot-get_mnage_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract mean age from pollock model run ‚Äî .get_mnage_df","title":"Extract mean age from pollock model run ‚Äî .get_mnage_df","text":"Extract mean age pollock model run","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/dot-get_mnage_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract mean age from pollock model run ‚Äî .get_mnage_df","text":"","code":".get_mnage_df(M)"},{"path":"https://afsc-assessments.github.io/ebswp/reference/dot-get_mnage_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract mean age from pollock model run ‚Äî .get_mnage_df","text":"M list object created read_admb function","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/dot-get_mnage_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract mean age from pollock model run ‚Äî .get_mnage_df","text":"dataframe spawning biomass","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/dot-get_recruitment_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Get recruitment data ‚Äî .get_recruitment_df","title":"Get recruitment data ‚Äî .get_recruitment_df","text":"Extracts predicted recruitment approximate asymptotic error-bars","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/dot-get_recruitment_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get recruitment data ‚Äî .get_recruitment_df","text":"","code":".get_recruitment_df(M)"},{"path":"https://afsc-assessments.github.io/ebswp/reference/dot-get_recruitment_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get recruitment data ‚Äî .get_recruitment_df","text":"M list object(s) created read_admb function","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/dot-get_recruitment_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get recruitment data ‚Äî .get_recruitment_df","text":"dataframe recruitment","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/dot-get_recruitment_df.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get recruitment data ‚Äî .get_recruitment_df","text":"SJD Martell, DN Webber","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/dot-get_ser_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract spawning exploitation rate ‚Äî .get_ser_df","title":"Extract spawning exploitation rate ‚Äî .get_ser_df","text":"Extract spawning exploitation rate","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/dot-get_ser_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract spawning exploitation rate ‚Äî .get_ser_df","text":"","code":".get_ser_df(M)"},{"path":"https://afsc-assessments.github.io/ebswp/reference/dot-get_ser_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract spawning exploitation rate ‚Äî .get_ser_df","text":"M list object created read_admb function","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/dot-get_ser_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract spawning exploitation rate ‚Äî .get_ser_df","text":"dataframe spawning biomass","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/dot-get_srr_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract stock recruitment results ‚Äî .get_srr_df","title":"Extract stock recruitment results ‚Äî .get_srr_df","text":"Extract stock recruitment results","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/dot-get_srr_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract stock recruitment results ‚Äî .get_srr_df","text":"","code":".get_srr_df(M)"},{"path":"https://afsc-assessments.github.io/ebswp/reference/dot-get_srr_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract stock recruitment results ‚Äî .get_srr_df","text":"M list object created read_admb function","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/dot-get_srr_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract stock recruitment results ‚Äî .get_srr_df","text":"dataframe expected observed SRR","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/dot-get_ssb_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract spawning stock biomass (ssb) ‚Äî .get_ssb_df","title":"Extract spawning stock biomass (ssb) ‚Äî .get_ssb_df","text":"Spawning biomass may defined males combination males females","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/dot-get_ssb_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract spawning stock biomass (ssb) ‚Äî .get_ssb_df","text":"","code":".get_ssb_df(M)"},{"path":"https://afsc-assessments.github.io/ebswp/reference/dot-get_ssb_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract spawning stock biomass (ssb) ‚Äî .get_ssb_df","text":"M list object created read_admb function","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/dot-get_ssb_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract spawning stock biomass (ssb) ‚Äî .get_ssb_df","text":"dataframe spawning biomass","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/dot-get_ssb_rel_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract spawning stock biomass (ssb) ‚Äî .get_ssb_rel_df","title":"Extract spawning stock biomass (ssb) ‚Äî .get_ssb_rel_df","text":"Spawning biomass may defined males combination males females","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/dot-get_ssb_rel_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract spawning stock biomass (ssb) ‚Äî .get_ssb_rel_df","text":"","code":".get_ssb_rel_df(M)"},{"path":"https://afsc-assessments.github.io/ebswp/reference/dot-get_ssb_rel_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract spawning stock biomass (ssb) ‚Äî .get_ssb_rel_df","text":"M list object created read_admb function","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/dot-get_ssb_rel_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract spawning stock biomass (ssb) ‚Äî .get_ssb_rel_df","text":"dataframe spawning biomass","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/dot-run_mod.html","id":null,"dir":"Reference","previous_headings":"","what":"run pollock model ‚Äî .run_mod","title":"run pollock model ‚Äî .run_mod","text":"run pollock model","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/dot-run_mod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"run pollock model ‚Äî .run_mod","text":"","code":".run_mod(moddir = mod_dir)"},{"path":"https://afsc-assessments.github.io/ebswp/reference/dot-run_mod.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"run pollock model ‚Äî .run_mod","text":"moddir directory pollock model run","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/dot-run_mod_windows.html","id":null,"dir":"Reference","previous_headings":"","what":"run pollock model on windows ‚Äî .run_mod_windows","title":"run pollock model on windows ‚Äî .run_mod_windows","text":"run pollock model windows","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/dot-run_mod_windows.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"run pollock model on windows ‚Äî .run_mod_windows","text":"","code":".run_mod_windows(moddir = mod_dir)"},{"path":"https://afsc-assessments.github.io/ebswp/reference/dot-run_mod_windows.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"run pollock model on windows ‚Äî .run_mod_windows","text":"moddir directory pollock model run","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/dot-run_proj.html","id":null,"dir":"Reference","previous_headings":"","what":"run projection model DOESN","title":"run projection model DOESN","text":"run projection model DOESN\"T WORK...dunno ","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/dot-run_proj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"run projection model DOESN","text":"","code":".run_proj(moddir = mod_dir)"},{"path":"https://afsc-assessments.github.io/ebswp/reference/dot-run_proj.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"run projection model DOESN","text":"moddir directory pollock model run","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/dot-run_proj_windows.html","id":null,"dir":"Reference","previous_headings":"","what":"run projection model for windows ‚Äî .run_proj_windows","title":"run projection model for windows ‚Äî .run_proj_windows","text":"run projection model windows","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/dot-run_proj_windows.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"run projection model for windows ‚Äî .run_proj_windows","text":"","code":".run_proj_windows(moddir = mod_dir)"},{"path":"https://afsc-assessments.github.io/ebswp/reference/dot-run_proj_windows.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"run projection model for windows ‚Äî .run_proj_windows","text":"moddir directory pollock model run","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/ebswp-package.html","id":null,"dir":"Reference","previous_headings":"","what":"ebswp: Facilitates Model Running for EBS Pollock ‚Äî ebswp-package","title":"ebswp: Facilitates Model Running for EBS Pollock ‚Äî ebswp-package","text":"Facilitates Model Running EBS Pollock","code":""},{"path":[]},{"path":"https://afsc-assessments.github.io/ebswp/reference/ebswp-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"ebswp: Facilitates Model Running for EBS Pollock ‚Äî ebswp-package","text":"Maintainer: Jim Ianelli Jim.Ianelli@noaa.gov (ORCID)","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/get_input_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Input Data for Model Configuration ‚Äî get_input_data","title":"Input Data for Model Configuration ‚Äî get_input_data","text":"function returns list containing various parameters, settings, data inputs required model configuration. includes start years, recruitment ages, maturity proportions, weights, catch data, survey data, .","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/get_input_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Input Data for Model Configuration ‚Äî get_input_data","text":"","code":"get_input_data()"},{"path":"https://afsc-assessments.github.io/ebswp/reference/get_input_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Input Data for Model Configuration ‚Äî get_input_data","text":"list following components: styr Start year model (e.g., 1964). styr_bts Start year bottom trawl survey (e.g., 1982). styr_ats Start year acoustic trawl survey (e.g., 1994). endyr End year model (e.g., 2024). recage Age recruitment (e.g., 1). nages Number ages model (e.g., 15). p_mature Proportion mature age (vector length nages). ew_ind End-weight index (vector length nages). wt_fsh Fishery weight--age matrix (rows = years, columns = ages). wt_ssb Spawning stock biomass weight--age matrix (rows = years, columns = ages). obs_catch Observed catch data (vector length n_fsh). obs_effort Observed effort data (vector length n_fsh). n_cpue Number CPUE data points. yrs_cpue Years CPUE data (vector length n_cpue). obs_cpue Observed CPUE data (vector length n_cpue). obs_cpue_std Standard deviation CPUE data (vector length n_cpue). n_avo Number acoustic survey data points. yrs_avo Years acoustic survey data (vector length n_avo). ob_avo Observed acoustic survey data (vector length n_avo). ob_avo_std Standard deviation acoustic survey data (vector length n_avo). wt_avo Weight--age matrix acoustic survey (rows = years, columns = ages). ngears Number gears. minind Minimum index gear (vector length ngears). n_fsh Number fishery years. n_bts Number bottom trawl survey years. n_ats Number acoustic trawl survey years. yrs_fsh_data Years fishery data (vector length n_fsh). yrs_bts_data Years bottom trawl survey data (vector length n_bts). yrs_ats_data Years acoustic trawl survey data (vector length n_ats). sam_fsh Sample size fishery data (vector length n_fsh). sam_bts Sample size bottom trawl survey data (vector length n_bts). sam_ats Sample size acoustic trawl survey data (vector length n_ats). err_fsh Error fishery data (vector length n_fsh). err_bts Error bottom trawl survey data (vector length n_bts). err_ats Error acoustic trawl survey data (vector length n_ats). oac_fsh_data Observed age composition fishery data (matrix size n_fsh x nages). ob_bts Observed bottom trawl survey biomass (vector length n_bts). ob_bts_std Standard deviation bottom trawl survey biomass (vector length n_bts). wt_bts Weight--age matrix bottom trawl survey (rows = years, columns = ages). ot_bts Observed bottom trawl survey numbers--age (matrix size n_bts x nages). oac_bts Observed age composition bottom trawl survey (matrix size n_bts x nages). ot_ats_std Standard deviation acoustic trawl survey numbers--age (vector length n_ats). oac_ats Observed age composition acoustic trawl survey (matrix size n_ats x nages). ob_ats Observed acoustic trawl survey biomass (vector length n_ats). ob_ats_std Standard deviation acoustic trawl survey biomass (vector length n_ats). wt_ats Weight--age matrix acoustic trawl survey (rows = years, columns = ages). bottom_temp Bottom temperature data (vector length n_fsh). n_age_err Number ageing error matrices. age_err Ageing error matrix (matrix size nages x nages). nlbins Number length bins. olc_fsh Observed length composition fishery data (vector length nlbins). age_len Age-length transition matrix (matrix size nages x nlbins). test Test value (e.g., 1234567).","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/get_input_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Input Data for Model Configuration ‚Äî get_input_data","text":"","code":"input_data <- get_input_data() #> Error in get_input_data(): could not find function \"get_input_data\""},{"path":"https://afsc-assessments.github.io/ebswp/reference/get_results.html","id":null,"dir":"Reference","previous_headings":"","what":"Fetch Model Results in Parallel ‚Äî get_results","title":"Fetch Model Results in Parallel ‚Äî get_results","text":"function fetches model results based specified model names directories.","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/get_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fetch Model Results in Parallel ‚Äî get_results","text":"","code":"get_results(   mod_names. = mod_names,   rundir = \"runs\",   moddir = mod_dir,   run_on_mac = TRUE )"},{"path":"https://afsc-assessments.github.io/ebswp/reference/get_results.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fetch Model Results in Parallel ‚Äî get_results","text":"mod_names. character vector model names. Default 'mod_names'. rundir main sub directory path models. Default 'runs' moddir main directory path models. Default 'mod_dir'","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/get_results.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fetch Model Results in Parallel ‚Äî get_results","text":"list containing model results.","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/get_tier3_res.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Tier 3 Results ‚Äî get_tier3_res","title":"Extract Tier 3 Results ‚Äî get_tier3_res","text":"Extracts results relevant Tier 3 analyses.","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/get_tier3_res.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Tier 3 Results ‚Äî get_tier3_res","text":"","code":"get_tier3_res(proj_file)"},{"path":"https://afsc-assessments.github.io/ebswp/reference/get_tier3_res.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Tier 3 Results ‚Äî get_tier3_res","text":"proj_file file path projection file.","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/get_tier3_res.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Tier 3 Results ‚Äî get_tier3_res","text":"list vector results relevant Tier 3 analyses.","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/get_tier3_res.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Tier 3 Results ‚Äî get_tier3_res","text":"","code":"if (FALSE) { # \\dontrun{ proj_file_path <- \"path/to/proj.csv\" tier3_results <- get_tier3_res(proj_file_path) } # }"},{"path":"https://afsc-assessments.github.io/ebswp/reference/get_vars.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract and Compute Several Metrics from Model Output ‚Äî get_vars","title":"Extract and Compute Several Metrics from Model Output ‚Äî get_vars","text":"function processes output certain model (possibly related fisheries) extract, compute, format various metrics.","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/get_vars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract and Compute Several Metrics from Model Output ‚Äî get_vars","text":"","code":"get_vars(M, proj_file = NULL, ord = dec_tab_ord)"},{"path":"https://afsc-assessments.github.io/ebswp/reference/get_vars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract and Compute Several Metrics from Model Output ‚Äî get_vars","text":"M list data structure holds model output/results. Expected several named elements, including fit, R, SSB, etc. proj_file (Optional) file path projection file Tier 3 results. Default NULL. ord order extent reporting decision table aspect Default dec_tab_ord.","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/get_vars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract and Compute Several Metrics from Model Output ‚Äî get_vars","text":"list B contains various extracted computed metrics.","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/get_vars.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract and Compute Several Metrics from Model Output ‚Äî get_vars","text":"","code":"if (FALSE) { # \\dontrun{ model_result <- list(...) # Example model result here metrics <- get_vars(model_result) } # }"},{"path":"https://afsc-assessments.github.io/ebswp/reference/model_settings.html","id":null,"dir":"Reference","previous_headings":"","what":"Model Settings List ‚Äî model_settings","title":"Model Settings List ‚Äî model_settings","text":"named list containing parameters settings control behavior model. list includes options stock recruitment, selectivity, natural mortality, .","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/model_settings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Model Settings List ‚Äî model_settings","text":"","code":"model_settings"},{"path":"https://afsc-assessments.github.io/ebswp/reference/model_settings.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Model Settings List ‚Äî model_settings","text":"list following components: DoCovBTS stan's covariance matrix option. SrType Stock Recruitment Type (1 = Ricker, 2 = Beverton-Holt, 3 = Constant, 4 = Old Ricker). Do_Combined combined surveys (0 = , 1 = Yes). use_age_err Use ageing error matrix (0 = , 1 = Yes). use_age1_ATS Use Age1 ATS Index (0 = , 1 = Yes). age1_sigma_ATS Age1 ATS Index Sigma (log-normal distribution). use_endyr_len Use end-year length data (0 = , 1 = Yes). use_popwts_ssb Use population weights spawning (otherwise fishery weights) (0 = , 1 = Yes). natmortprior Natural mortality prior. cvnatmortprior CV natural mortality prior. natmort_in Natural mortality age (vector ages 1 15). q_all_prior Prior q values. q_all_sigma Sigma q values (ignored greater 1). q_bts_prior Prior BTS q values. q_bts_sigma Sigma BTS q values (ignored greater 1). sigrprior Prior sigma R (based 1978 onwards). cvsigrprior CV sigma R prior. phase_sigr Phase estimating sigma R. steepnessprior Prior steepness. cvsteepnessprior CV steepness prior. phase_steepness Phase estimating steepness. use_spr_msy_pen Use prior SPRF35 = Fmsy (0 = , 1 = Yes). sigma_spr_msy Sigma SPRF35 = Fmsy. use_last_ATS_ac Use last ATS age composition (0 = , >0 = Yes). nyrs_sel_avg Number years average recent selectivity. do_bts_bio Use BTS Biomass (0 = Numbers, 1 = Biomass). do_ATS_bio Use ATS Biomass (0 = Numbers, 1 = Biomass). srprior_a Stock-Recruitment Prior Beta distribution alpha. srprior_b Stock-Recruitment Prior Beta distribution beta. nyrs_future Number future years. next_yrs_catch Next year's catch. nscen Number scenarios. fixed_catch_fut2 Fixed catch future scenario 2. fixed_catch_fut3 Fixed catch future scenario 3. phase_F40 Phase calculate F40%. robust_phase Phase start robustness. ATS_robust_phase Phase ATS robustness. ATS_like_type Likelihood ATS (0 = standard, 1 = log-normal age). phase_logist_fsh Phase fishery logistic selectivity. phase_logist_bts Phase BTS logistic selectivity. phase_seldevs_fsh Phase fishery selectivity deviations. phase_seldevs_bts Phase BTS selectivity deviations. phase_age1devs_bts Phase BTS Age1 deviations. phase_selcoffs_ATS Phase ATS survey selectivity coefficients. phase_selcoffs_ATS_dev Phase ATS survey selectivity deviations. phase_natmort Phase natural mortality estimation. phase_q_bts Phase BTS q estimation. phase_q_std_area Phase standard BTS area q estimation. phase_q_ATS Phase ATS q estimation. phase_bt Phase bottom temperature effect q. phase_rec_devs Phase regular recruitment deviations. phase_larv Phase larval recruitment deviations. phase_sr Phase estimate stock-recruitment parameters (negative means constant recruitment). wt_fut_phase Phase future weight uncertainty. last_age_sel_group_fsh Fishery: Number oldest age groups selectivity. last_age_sel_group_bts BTS: Number oldest age groups selectivity. last_age_sel_group_ATS ATS: Number oldest age groups selectivity. ctrl_flag numeric vector control flags, element corresponds specific setting: 1 Catch Biomass. 2 Survey Emphasis. 3 Recruitment Deviations. 4 Fishing mortality deviations (F_devs). 5 Lambda ATS survey. 6 AVO (Acoustic Visual Observation) data. 7 Age Composition. 8 Age Composition Fishery. 9 Age Composition Survey Fishery. 10 Selectivity Trend (Fishery). 11 Selectivity Curvature (Fishery). 12 CPUE Data. 13 Fishery Selectivity Dome-shapedness. 14 Bottom Trawl Survey Dome-shapedness. 15 Non-Increasing Selectivity Penalty Hydraulic Survey. 16 Number years selectivity fishery stays . 17 Number years selectivity stays survey. 18 Reserved. 19 Selectivity Deviation Surveys Curvature (Surveys). 20 BTS Time Variability. 21 BTS Smoothness (nonparametric). 22 ATS Second-Difference. 23 Lambda larval recruitment deviations. 24 Recruits 1978 onwards . 25 Ignore 1978 year class estimation. 26 Reserved. 27 Third differencing space (negative means smoothing, positive = lambda). 28 Retrospective year. 29 Omit recent years stock-recruitment estimation. 30 SRR Prior (0 = use prior data, otherwise weight prior). sel_dev_shift Selectivity block shift. phase_coheff Phase cohort effect. phase_yreff Phase year effect. switch_temp_recruitment Switch temperature-dependent recruitment (0 = , 1 = Yes). phase_temp_recruitment Phase temperature-dependent recruitment. switch_pred_mort Switch predator mortality (0 = , 1 = Yes). phase_pred_mort Phase predator mortality. switch_multispecies_functional_response Switch multispecies functional response (0 = , 1 = Yes).","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/model_settings.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Model Settings List ‚Äî model_settings","text":"","code":"model_settings <- list(   DoCovBTS = 1,   SrType = 1,   Do_Combined = 0,   use_age_err = 1,   use_age1_ATS = 1,   age1_sigma_ATS = 1,   use_endyr_len = 0,   use_popwts_ssb = 0,   natmortprior = 0.3,   cvnatmortprior = 0.1,   natmort_in = c(0.9, 0.45, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3),   q_all_prior = 0,   q_all_sigma = 2,   q_bts_prior = 0,   q_bts_sigma = 2,   sigrprior = 1,   cvsigrprior = 0.2,   phase_sigr = -6,   steepnessprior = 0.6,   cvsteepnessprior = 0.12,   phase_steepness = 5,   use_spr_msy_pen = 0,   sigma_spr_msy = 0.20,   use_last_ATS_ac = 1,   nyrs_sel_avg = 2,   do_bts_bio = 1,   do_ATS_bio = 1,   srprior_a = 14.93209877,   srprior_b = 14.93209877,   nyrs_future = 5,   next_yrs_catch = 1350,   nscen = 8,   fixed_catch_fut2 = 1400,   fixed_catch_fut3 = 1200,   phase_F40 = 6,   robust_phase = 1350,   ATS_robust_phase = 1350,   ATS_like_type = 0,   phase_logist_fsh = -1,   phase_logist_bts = 2,   phase_seldevs_fsh = 4,   phase_seldevs_bts = 5,   phase_age1devs_bts = 3,   phase_selcoffs_ATS = 3,   phase_selcoffs_ATS_dev = -5,   phase_natmort = -6,   phase_q_bts = 3,   phase_q_std_area = -4,   phase_q_ATS = 4,   phase_bt = -6,   phase_rec_devs = 3,   phase_larv = -3,   phase_sr = 5,   wt_fut_phase = 6,   last_age_sel_group_fsh = 4,   last_age_sel_group_bts = 8,   last_age_sel_group_ATS = 8,   ctrl_flag = c(200, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 12.5, 1, 1, 1, 1, 1, 1, 3.125, 5, 0.1, 5, 1, 1, 2, 1, 0, 2, 1),   sel_dev_shift = 0,   phase_coheff = 1,   phase_yreff = 1,   switch_temp_recruitment = 0,   phase_temp_recruitment = 6,   switch_pred_mort = 0,   phase_pred_mort = 1,   switch_multispecies_functional_response = 1 )"},{"path":"https://afsc-assessments.github.io/ebswp/reference/plot_Nage_3.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot predicted Numbers at age 3 ‚Äî plot_Nage_3","title":"Plot predicted Numbers at age 3 ‚Äî plot_Nage_3","text":"Plot predicted Numbers age 3","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/plot_Nage_3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot predicted Numbers at age 3 ‚Äî plot_Nage_3","text":"","code":"plot_Nage_3(   M,   xlab = \"Year\",   ylab = \"Numbers at age 3\",   ylim = NULL,   xlim = c(1990, 2020),   breaks = seq(1990, 2022, 2),   alpha = 0.8,   legend = TRUE,   order = NULL )"},{"path":"https://afsc-assessments.github.io/ebswp/reference/plot_Nage_3.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot predicted Numbers at age 3 ‚Äî plot_Nage_3","text":"M List object(s) created read_admb function xlab x-label figure ylab y-label figure ylim upper limit figure alpha opacity ribbon","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/plot_Nage_3.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot predicted Numbers at age 3 ‚Äî plot_Nage_3","text":"Plot model estimates age3+ stock biomass","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/plot_R_rel.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot predicted recruitment ‚Äî plot_R_rel","title":"Plot predicted recruitment ‚Äî plot_R_rel","text":"Plot predicted recruitment","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/plot_R_rel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot predicted recruitment ‚Äî plot_R_rel","text":"","code":"plot_R_rel(   M,   xlab = \"Year\",   ylab = \"Relative age-1 recruits\",   ylim = NULL,   xlim = NULL,   alpha = 0.1,   legend = TRUE,   rel = TRUE )"},{"path":"https://afsc-assessments.github.io/ebswp/reference/plot_R_rel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot predicted recruitment ‚Äî plot_R_rel","text":"M List object(s) created read_admb function xlab x-label figure ylab y-label figure ylim upper limit figure alpha opacity ribbon","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/plot_R_rel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot predicted recruitment ‚Äî plot_R_rel","text":"Plot model estimates spawning stock biomass","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/plot_agefit.html","id":null,"dir":"Reference","previous_headings":"","what":"Age Composition Data Plotter t(t() This function generates a series of plots visualizing the age composition data from fisheries assessment. It compares observed and predicted data across different years. ‚Äî plot_agefit","title":"Age Composition Data Plotter t(t() This function generates a series of plots visualizing the age composition data from fisheries assessment. It compares observed and predicted data across different years. ‚Äî plot_agefit","text":"Age Composition Data Plotter t(t() function generates series plots visualizing age composition data fisheries assessment. compares observed predicted data across different years.","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/plot_agefit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Age Composition Data Plotter t(t() This function generates a series of plots visualizing the age composition data from fisheries assessment. It compares observed and predicted data across different years. ‚Äî plot_agefit","text":"","code":"plot_agefit(   x,   case_label = \"2021 assessment\",   gear = \"bts\",   type = \"survey\",   styr = NULL,   ageplus = NULL )"},{"path":"https://afsc-assessments.github.io/ebswp/reference/plot_agefit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Age Composition Data Plotter t(t() This function generates a series of plots visualizing the age composition data from fisheries assessment. It compares observed and predicted data across different years. ‚Äî plot_agefit","text":"case_label Label specific case dataset visualized. Default \"2011 assessment\". dat data frame, default mod1. structure must contain age composition data, names used create temporary variables tmp1, tmp2, tmp3. main Title main plot. Default empty string. f integer representing fishery index. Default 1. rec_age integer denoting recruitment age. Default 2.","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/plot_agefit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Age Composition Data Plotter t(t() This function generates a series of plots visualizing the age composition data from fisheries assessment. It compares observed and predicted data across different years. ‚Äî plot_agefit","text":"multi-panel plot panel visualizes age composition data specific year.","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/plot_agefit.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Age Composition Data Plotter t(t() This function generates a series of plots visualizing the age composition data from fisheries assessment. It compares observed and predicted data across different years. ‚Äî plot_agefit","text":"function plots observed fishery age composition data using bar plot, overlaying predicted data points. organizes plots multi-panel figure, panel representing year. Age classes represented x-axis.","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/plot_agefit.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Age Composition Data Plotter t(t() This function generates a series of plots visualizing the age composition data from fisheries assessment. It compares observed and predicted data across different years. ‚Äî plot_agefit","text":"function uses rainbow color palette, colors loop around cohort. function expects certain naming conventions input dataset dat.","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/plot_agefit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Age Composition Data Plotter t(t() This function generates a series of plots visualizing the age composition data from fisheries assessment. It compares observed and predicted data across different years. ‚Äî plot_agefit","text":"","code":"# Example usage (ensure you have an appropriate dataset 'mod1'): # AgeFits(dat=mod1, main=\"Fishery Age Composition\", case_label=\"Sample Assessment\")"},{"path":"https://afsc-assessments.github.io/ebswp/reference/plot_ats.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Acoustic Trawl Survey Biomass Data ‚Äî plot_ats","title":"Plot Acoustic Trawl Survey Biomass Data ‚Äî plot_ats","text":"function visualizes acoustic trawl survey data, either biomass another metric, depending choice. provides options customization resulting plot.","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/plot_ats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Acoustic Trawl Survey Biomass Data ‚Äî plot_ats","text":"","code":"plot_ats(   M,   xlab = \"Year\",   ylab = \"Acoustic trawl survey biomass\",   xlim = NULL,   ylim = NULL,   alpha = 0.1,   biomass = TRUE,   color = \"red\" )"},{"path":"https://afsc-assessments.github.io/ebswp/reference/plot_ats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Acoustic Trawl Survey Biomass Data ‚Äî plot_ats","text":"M List  model outputs. list object like one accepted .get_ats_df. xlab Label x-axis. Default \"Year\". ylab Label y-axis. Default \"Acoustic trawl survey biomass\". xlim Optional range x-axis. ylim Optional range y-axis. alpha Opacity ribbon, used. Default 0.1. biomass Logical flag. TRUE, plots data related biomass; FALSE, plots data related another metric. Default TRUE. color Color data points. Default \"red\".","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/plot_ats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Acoustic Trawl Survey Biomass Data ‚Äî plot_ats","text":"ggplot2 plot object visualizing acoustic trawl survey data.","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/plot_avo.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot avo data ‚Äî plot_avo","title":"Plot avo data ‚Äî plot_avo","text":"function takes list models plots observed, predicted confidence intervals bottom trawl survey data.","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/plot_avo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot avo data ‚Äî plot_avo","text":"","code":"plot_avo(   M,   xlab = \"Year\",   ylab = \"Acoustic return (Sa from AVO) \",   ylim = NULL )"},{"path":"https://afsc-assessments.github.io/ebswp/reference/plot_avo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot avo data ‚Äî plot_avo","text":"M list models model needed attributes. xlab Label x-axis. ylab Label y-axis. ylim Limits y-axis. xlim Limits x-axis. color Color points. biomass Logical indicating biomass data used. FALSE, measurements used.","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/plot_avo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot avo data ‚Äî plot_avo","text":"ggplot object plotted data.","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/plot_bts.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot bottom trawl survey data ‚Äî plot_bts","title":"Plot bottom trawl survey data ‚Äî plot_bts","text":"function takes list models plots observed, predicted confidence intervals bottom trawl survey data.","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/plot_bts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot bottom trawl survey data ‚Äî plot_bts","text":"","code":"plot_bts(   M,   xlab = \"Year\",   ylab = \"Bottom trawl survey biomass\",   xlim = NULL,   ylim = NULL,   color = \"purple\",   biomass = TRUE )"},{"path":"https://afsc-assessments.github.io/ebswp/reference/plot_bts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot bottom trawl survey data ‚Äî plot_bts","text":"M list models model needed attributes. xlab Label x-axis. ylab Label y-axis. xlim Limits x-axis. ylim Limits y-axis. color Color points. biomass Logical indicating biomass data used. FALSE, measurements used.","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/plot_bts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot bottom trawl survey data ‚Äî plot_bts","text":"ggplot object plotted data.","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/plot_cope.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot copepod something ‚Äî plot_cope","title":"Plot copepod something ‚Äî plot_cope","text":"Plot copepod something","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/plot_cope.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot copepod something ‚Äî plot_cope","text":"","code":"plot_cope(   M,   xlab = \"Year\",   ylab = \"Copepod index \",   ylim = NULL,   color = \"red\" )"},{"path":"https://afsc-assessments.github.io/ebswp/reference/plot_cope.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot copepod something ‚Äî plot_cope","text":"M List object(s) created read_admb function xlab x-label figure ylab y-label figure ylim upper limit figure","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/plot_cope.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot copepod something ‚Äî plot_cope","text":"Plot model estimates spawning stock biomass","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/plot_cpue.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot predicted CPUE ‚Äî plot_cpue","title":"Plot predicted CPUE ‚Äî plot_cpue","text":"Plot predicted CPUE","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/plot_cpue.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot predicted CPUE ‚Äî plot_cpue","text":"","code":"plot_cpue(   M,   xlab = \"Year\",   ylab = \"Early trawl fishery CPUE\",   ylim = NULL,   color = \"red\" )"},{"path":"https://afsc-assessments.github.io/ebswp/reference/plot_cpue.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot predicted CPUE ‚Äî plot_cpue","text":"M List object(s) created read_admb function xlab x-label figure ylab y-label figure ylim upper limit figure","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/plot_cpue.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot predicted CPUE ‚Äî plot_cpue","text":"Plot model estimates observed predicted CPUE","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/plot_likes.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Likelihood Values ‚Äî plot_likes","title":"Plot Likelihood Values ‚Äî plot_likes","text":"function plots negative log likelihood values different components specified predictor (e.g., natural mortality). function uses ggplot2 visualization.","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/plot_likes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Likelihood Values ‚Äî plot_likes","text":"","code":"plot_likes(   M,   xlab = \"Natural Mortality\",   ylab = \"relative -ln Likelihood\",   ylim = NULL,   xlim = NULL,   alpha = 0.1,   legend = TRUE )"},{"path":"https://afsc-assessments.github.io/ebswp/reference/plot_likes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Likelihood Values ‚Äî plot_likes","text":"M list models likelihood values extracted. xlab Label x-axis. Default \"Natural Mortality\". ylab Label y-axis. Default \"relative -ln Likelihood\". ylim Limits y-axis. Default NULL. xlim Limits x-axis. Default NULL. alpha Alpha transparency level plotted lines. Default 0.1. legend Logical indicating whether display legend. Default TRUE.","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/plot_likes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Likelihood Values ‚Äî plot_likes","text":"ggplot object displaying negative log likelihood values.","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/plot_likes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Likelihood Values ‚Äî plot_likes","text":"","code":"# Assuming 'model_list' is a list of models with the appropriate structure # plot_likes(model_list)"},{"path":"https://afsc-assessments.github.io/ebswp/reference/plot_mnage.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot predicted mean age by gear type ‚Äî plot_mnage","title":"Plot predicted mean age by gear type ‚Äî plot_mnage","text":"Plot predicted mean age gear type","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/plot_mnage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot predicted mean age by gear type ‚Äî plot_mnage","text":"","code":"plot_mnage(M, xlab = \"Year\", ylab = \"Mean age\", xlim = NULL, ylim = NULL)"},{"path":"https://afsc-assessments.github.io/ebswp/reference/plot_mnage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot predicted mean age by gear type ‚Äî plot_mnage","text":"M List object(s) created read_admb function xlab x-label figure ylab y-label figure xlim year range plot figure ylim upper limit figure","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/plot_mnage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot predicted mean age by gear type ‚Äî plot_mnage","text":"Plot model estimates mean age observed (implied confidence bounds)","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/plot_recruitment.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot predicted recruitment and approximate asymptotic error-bars ‚Äî plot_recruitment","title":"Plot predicted recruitment and approximate asymptotic error-bars ‚Äî plot_recruitment","text":"Plot predicted recruitment approximate asymptotic error-bars","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/plot_recruitment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot predicted recruitment and approximate asymptotic error-bars ‚Äî plot_recruitment","text":"","code":"plot_recruitment(   M,   xlab = \"Year\",   ylab = \"Recruitment (millions)\",   xlim = c(1990.5, 2023.5),   fatten = 0.8,   fill = \"yellow\",   alpha = 0.9 )"},{"path":"https://afsc-assessments.github.io/ebswp/reference/plot_recruitment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot predicted recruitment and approximate asymptotic error-bars ‚Äî plot_recruitment","text":"M list object created read_admb function xlab x-axis label plot ylab y-axis label plot","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/plot_recruitment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot predicted recruitment and approximate asymptotic error-bars ‚Äî plot_recruitment","text":"Plot predicted recruitment","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/plot_recruitment.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot predicted recruitment and approximate asymptotic error-bars ‚Äî plot_recruitment","text":"SJD Martell, DN Webber","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/plot_sel.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot selectivity ‚Äî plot_sel","title":"Plot selectivity ‚Äî plot_sel","text":"Plot selectivity","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/plot_sel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot selectivity ‚Äî plot_sel","text":"","code":"plot_sel(   Year = M$Yr,   sel = M$sel_fsh,   styr = 1977,   fage = NULL,   lage = NULL,   alpha = 0.2,   scale = 3.8,   fill = \"purple\" )"},{"path":"https://afsc-assessments.github.io/ebswp/reference/plot_sel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot selectivity ‚Äî plot_sel","text":"alpha opacity ribbon M List object(s) created read_admb function xlab x-label figure ylab y-label figure ylim upper limit figure","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/plot_sel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot selectivity ‚Äî plot_sel","text":"Plot model estimates spawning stock biomass","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/plot_ser.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot predicted spawning stock biomass (SER) ‚Äî plot_ser","title":"Plot predicted spawning stock biomass (SER) ‚Äî plot_ser","text":"Plot predicted spawning stock biomass (SER)","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/plot_ser.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot predicted spawning stock biomass (SER) ‚Äî plot_ser","text":"","code":"plot_ser(   M,   xlab = \"Year\",   ylab = \"Spawning Exploitation rate\",   ylim = NULL,   xlim = NULL,   breaks = seq(1960, 2017, 5),   alpha = 0.1,   legend = TRUE )"},{"path":"https://afsc-assessments.github.io/ebswp/reference/plot_ser.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot predicted spawning stock biomass (SER) ‚Äî plot_ser","text":"M List object(s) created read_admb function xlab x-label figure ylab y-label figure ylim upper limit figure alpha opacity ribbon","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/plot_ser.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot predicted spawning stock biomass (SER) ‚Äî plot_ser","text":"Plot model estimates spawning stock biomass","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/plot_srr.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Stock-Recruitment Relationship (SRR) ‚Äî plot_srr","title":"Plot Stock-Recruitment Relationship (SRR) ‚Äî plot_srr","text":"function plots stock-recruitment relationship (SRR) using ggplot2. can handle multiple models provides flexibility display options.","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/plot_srr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Stock-Recruitment Relationship (SRR) ‚Äî plot_srr","text":"","code":"plot_srr(   M,   ylab = \"Recruits (age 1, millions)\",   xlab = \"Female spawning biomass (kt)\",   ylim = NULL,   xlim = NULL,   alpha = 0.05,   ebar = \"FALSE\",   leglabs = NULL,   coverlap = FALSE,   sizein = 3,   sizeout = 2,   yrsin = 1977:2019 )"},{"path":"https://afsc-assessments.github.io/ebswp/reference/plot_srr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Stock-Recruitment Relationship (SRR) ‚Äî plot_srr","text":"M list data structure containing model results. ylab Label y-axis. Default \"Recruits (age 1, millions)\". xlab Label x-axis. Default \"Female spawning biomass (kt)\". ylim Limits y-axis. Default NULL. xlim Limits x-axis. Default NULL. alpha Alpha ribbons indicating uncertainty. Default 0.05. ebar Logical, TRUE error bars plotted. Default FALSE. leglabs Custom labels legend. Default NULL. coverlap Logical, TRUE overlapping text labels checked prevented. Default FALSE. sizein Font size -sample text labels. Default 3. sizeout Font size --sample text labels. Default 2. yrsin Years considered -sample. Default 1977:2019.","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/plot_srr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Stock-Recruitment Relationship (SRR) ‚Äî plot_srr","text":"ggplot object containing SRR plot.","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/plot_srr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Stock-Recruitment Relationship (SRR) ‚Äî plot_srr","text":"","code":"# Assuming 'model_list' contains the relevant model results: # plot_srr(M = model_list, ylim = c(0, 1e6), xlim = c(0, 2000))"},{"path":"https://afsc-assessments.github.io/ebswp/reference/plot_ssb.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot predicted spawning stock biomass (ssb) ‚Äî plot_ssb","title":"Plot predicted spawning stock biomass (ssb) ‚Äî plot_ssb","text":"Spawning biomass may defined males combination males females","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/plot_ssb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot predicted spawning stock biomass (ssb) ‚Äî plot_ssb","text":"","code":"plot_ssb(   M,   xlab = \"Year\",   ylab = \"Female spawning biomass (kt)\",   ylim = NULL,   xlim = NULL,   breaks = seq(1990, 2022, 2),   alpha = 0.1,   legend = TRUE,   order = NULL )"},{"path":"https://afsc-assessments.github.io/ebswp/reference/plot_ssb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot predicted spawning stock biomass (ssb) ‚Äî plot_ssb","text":"M List object(s) created read_admb function xlab x-label figure ylab y-label figure ylim upper limit figure alpha opacity ribbon","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/plot_ssb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot predicted spawning stock biomass (ssb) ‚Äî plot_ssb","text":"Plot model estimates spawning stock biomass","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/plot_ssb_rel.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot predicted spawning stock biomass (ssb) ‚Äî plot_ssb_rel","title":"Plot predicted spawning stock biomass (ssb) ‚Äî plot_ssb_rel","text":"Spawning biomass may defined males combination males females","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/plot_ssb_rel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot predicted spawning stock biomass (ssb) ‚Äî plot_ssb_rel","text":"","code":"plot_ssb_rel(   M,   xlab = \"Year\",   ylab = \"Relative female spawning biomass\",   ylim = NULL,   xlim = NULL,   legend = TRUE,   breaks = seq(1990, 2022, 5),   alpha = 0.1 )"},{"path":"https://afsc-assessments.github.io/ebswp/reference/plot_ssb_rel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot predicted spawning stock biomass (ssb) ‚Äî plot_ssb_rel","text":"M List object(s) created read_admb function xlab x-label figure ylab y-label figure ylim upper limit figure alpha opacity ribbon","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/plot_ssb_rel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot predicted spawning stock biomass (ssb) ‚Äî plot_ssb_rel","text":"Plot model estimates spawning stock biomass","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/print_Tier3_tbl.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate and Print Tier 3 Summary Tables ‚Äî print_Tier3_tbl","title":"Generate and Print Tier 3 Summary Tables ‚Äî print_Tier3_tbl","text":"function generates prints summary tables specified model configuration. calculates mean values various metrics across different scenarios displays formatted tables Catch, Spawning Stock Biomass (SSB), Fishing Mortality (F), Allowable Biological Catch (ABC).","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/print_Tier3_tbl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate and Print Tier 3 Summary Tables ‚Äî print_Tier3_tbl","text":"","code":"print_Tier3_tbl(mod_number, run = FALSE)"},{"path":"https://afsc-assessments.github.io/ebswp/reference/print_Tier3_tbl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate and Print Tier 3 Summary Tables ‚Äî print_Tier3_tbl","text":"mod_number Integer. Specifies model configuration number. run Logical. TRUE, runs projection model specified configuration. Default FALSE.","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/print_Tier3_tbl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate and Print Tier 3 Summary Tables ‚Äî print_Tier3_tbl","text":"Prints formatted tables Catch, SSB, F, ABC. return value.","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/print_Tier3_tbl.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate and Print Tier 3 Summary Tables ‚Äî print_Tier3_tbl","text":"function reads projection results CSV file, groups data alternative year, calculates mean values specific metrics, formats tables metric. tables printed captions based model configuration name.","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/print_Tier3_tbl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate and Print Tier 3 Summary Tables ‚Äî print_Tier3_tbl","text":"","code":"# Example usage print_Tier3_tbl(mod_number = 1, run = TRUE) #> Error in print_Tier3_tbl(mod_number = 1, run = TRUE): object '.MODELDIR' not found"},{"path":"https://afsc-assessments.github.io/ebswp/reference/read_admb.html","id":null,"dir":"Reference","previous_headings":"","what":"Read ADMB output files ‚Äî read_admb","title":"Read ADMB output files ‚Äî read_admb","text":"Read ADMB output files .rep, .par, .cor return R object type 'list'","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/read_admb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read ADMB output files ‚Äî read_admb","text":"","code":"read_admb(repfile)"},{"path":"https://afsc-assessments.github.io/ebswp/reference/read_admb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read ADMB output files ‚Äî read_admb","text":"repfile ADMB output files read (extension needed)","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/read_admb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read ADMB output files ‚Äî read_admb","text":"object type 'list' ADMB outputs list elements","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/read_ctl.html","id":null,"dir":"Reference","previous_headings":"","what":"Read ADMB .ctl file ‚Äî read_ctl","title":"Read ADMB .ctl file ‚Äî read_ctl","text":"Read ADMB .ctl file return R object type 'list'. WORK","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/read_ctl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read ADMB .ctl file ‚Äî read_ctl","text":"","code":"read_ctl(fn)"},{"path":"https://afsc-assessments.github.io/ebswp/reference/read_ctl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read ADMB .ctl file ‚Äî read_ctl","text":"repfile name ADMB output file read","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/read_ctl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read ADMB .ctl file ‚Äî read_ctl","text":"object type 'list' ADMB outputs therein","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/read_ctl.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Read ADMB .ctl file ‚Äî read_ctl","text":"D'Arcy N. Webber","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/read_dat.html","id":null,"dir":"Reference","previous_headings":"","what":"Read ADMB Data File ‚Äî read_dat","title":"Read ADMB Data File ‚Äî read_dat","text":"Reads ADMB data file returns list outputs R.","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/read_dat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read ADMB Data File ‚Äî read_dat","text":"","code":"read_dat(fn)"},{"path":"https://afsc-assessments.github.io/ebswp/reference/read_dat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read ADMB Data File ‚Äî read_dat","text":"fn Character. name ADMB data file.","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/read_dat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read ADMB Data File ‚Äî read_dat","text":"list containing various ADMB outputs data file.","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/read_fit.html","id":null,"dir":"Reference","previous_headings":"","what":"Read ADMB .par, .std, and .cor file and return an R object of type 'list' of estimates and correlations ‚Äî read_fit","title":"Read ADMB .par, .std, and .cor file and return an R object of type 'list' of estimates and correlations ‚Äî read_fit","text":"Read ADMB .par, .std, .cor file return R object type 'list' estimates correlations","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/read_fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read ADMB .par, .std, and .cor file and return an R object of type 'list' of estimates and correlations ‚Äî read_fit","text":"","code":"read_fit(repfile)"},{"path":"https://afsc-assessments.github.io/ebswp/reference/read_fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read ADMB .par, .std, and .cor file and return an R object of type 'list' of estimates and correlations ‚Äî read_fit","text":"repfile name ADMB output file read (extension needed)","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/read_fit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read ADMB .par, .std, and .cor file and return an R object of type 'list' of estimates and correlations ‚Äî read_fit","text":"object type 'list' ADMB outputs therein","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/read_fit.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Read ADMB .par, .std, and .cor file and return an R object of type 'list' of estimates and correlations ‚Äî read_fit","text":"Steve Martell, Anders Nielsen, Athol Whitten, D'Arcy N. Webber","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/read_psv.html","id":null,"dir":"Reference","previous_headings":"","what":"Read ADMB .psv file ‚Äî read_psv","title":"Read ADMB .psv file ‚Äî read_psv","text":"Read ADMB .psv file return R object type 'list'","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/read_psv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read ADMB .psv file ‚Äî read_psv","text":"","code":"read_psv(fn, nsamples = 10000)"},{"path":"https://afsc-assessments.github.io/ebswp/reference/read_psv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read ADMB .psv file ‚Äî read_psv","text":"repfile name ADMB output file read (extension needed)","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/read_psv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read ADMB .psv file ‚Äî read_psv","text":"object type 'list' ADMB outputs therein","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/read_psv.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Read ADMB .psv file ‚Äî read_psv","text":"Steve Martell","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/read_rep.html","id":null,"dir":"Reference","previous_headings":"","what":"Read ADMB .rep file ‚Äî read_rep","title":"Read ADMB .rep file ‚Äî read_rep","text":"Read ADMB .rep file return R object type 'list'","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/read_rep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read ADMB .rep file ‚Äî read_rep","text":"","code":"read_rep(fn)"},{"path":"https://afsc-assessments.github.io/ebswp/reference/read_rep.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read ADMB .rep file ‚Äî read_rep","text":"fn name ADMB output file read (extension needed)","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/read_rep.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read ADMB .rep file ‚Äî read_rep","text":"object type \"list\" ADMB outputs therein","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/read_rep.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Read ADMB .rep file ‚Äî read_rep","text":"Steve Martell, D'Arcy N. Webber","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/rescale_cov.html","id":null,"dir":"Reference","previous_headings":"","what":"Rescale a Covariance Matrix ‚Äî rescale_cov","title":"Rescale a Covariance Matrix ‚Äî rescale_cov","text":"function rescales covariance matrix using either Cholesky decomposition method simple diagonal adjustment.","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/rescale_cov.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rescale a Covariance Matrix ‚Äî rescale_cov","text":"","code":"rescale_cov(Sigma, Scale_factor, DoChol = FALSE)"},{"path":"https://afsc-assessments.github.io/ebswp/reference/rescale_cov.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rescale a Covariance Matrix ‚Äî rescale_cov","text":"Sigma covariance matrix needs rescaled. Scale_factor numeric value vector used scaling. DoChol Logical indicating Cholesky decomposition method used. FALSE, simple diagonal adjustment method used. Default FALSE.","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/rescale_cov.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rescale a Covariance Matrix ‚Äî rescale_cov","text":"rescaled covariance matrix.","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/run_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Run Multiple ADMB Models in Parallel ‚Äî run_model","title":"Run Multiple ADMB Models in Parallel ‚Äî run_model","text":"function uses parallel processing run multiple ADMB models gather outputs. running models, also fetches certain variables 'proj/spm_detail.csv' file associated model.","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/run_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run Multiple ADMB Models in Parallel ‚Äî run_model","text":"","code":"run_model(   moddir = mod_dir,   rundir = \"runs\",   modnames = mod_names,   Output = TRUE,   run_on_mac = TRUE )"},{"path":"https://afsc-assessments.github.io/ebswp/reference/run_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run Multiple ADMB Models in Parallel ‚Äî run_model","text":"moddir Character vector. directory paths models, default mod_dir. rundir Character string. base run directory path models, default runs. modnames Character vector. names models, default mod_names. Output Logical. flag indicating output displayed (e.g., messages, progress, etc.), default FALSE.","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/run_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run Multiple ADMB Models in Parallel ‚Äî run_model","text":"list containing outputs ADMB models fetched variables.","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/run_proj.html","id":null,"dir":"Reference","previous_headings":"","what":"Run Multiple projection models in Parallel ‚Äî run_proj","title":"Run Multiple projection models in Parallel ‚Äî run_proj","text":"function uses parallel processing run multiple ADMB models gather outputs. running models, also fetches certain variables 'proj/spm_detail.csv' file associated model.","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/run_proj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run Multiple projection models in Parallel ‚Äî run_proj","text":"","code":"run_proj(   moddir = mod_dir,   rundir = \"runs\",   modnames = mod_names,   run_on_mac = TRUE )"},{"path":"https://afsc-assessments.github.io/ebswp/reference/run_proj.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run Multiple projection models in Parallel ‚Äî run_proj","text":"moddir Character vector. directory paths models, default mod_dir. rundir Character string. base run directory path models, default runs. modnames Character vector. names models, default mod_names. progress, etc.), default FALSE.","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/tab_fit.html","id":null,"dir":"Reference","previous_headings":"","what":"Tabulate fits from models using extended metrics. ‚Äî tab_fit","title":"Tabulate fits from models using extended metrics. ‚Äî tab_fit","text":"function takes list model outputs compiles dataframe broader set fit metrics.","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/tab_fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tabulate fits from models using extended metrics. ‚Äî tab_fit","text":"","code":"tab_fit(M, mod_scen = NULL)"},{"path":"https://afsc-assessments.github.io/ebswp/reference/tab_fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tabulate fits from models using extended metrics. ‚Äî tab_fit","text":"M List containing model outputs. mod_scen Optional vector integers indicating models M use. Default models.","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/tab_fit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tabulate fits from models using extended metrics. ‚Äî tab_fit","text":"Returns dataframe extended fit metrics.","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/tab_ref.html","id":null,"dir":"Reference","previous_headings":"","what":"Tabulate fits from models using extended metrics. ‚Äî tab_ref","title":"Tabulate fits from models using extended metrics. ‚Äî tab_ref","text":"function takes list model outputs compiles dataframe broader set fit metrics.","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/tab_ref.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tabulate fits from models using extended metrics. ‚Äî tab_ref","text":"","code":"tab_ref(M, mod_scen = NULL)"},{"path":"https://afsc-assessments.github.io/ebswp/reference/tab_ref.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tabulate fits from models using extended metrics. ‚Äî tab_ref","text":"M List containing model outputs. mod_scen Optional vector integers indicating models M use. Default models.","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/tab_ref.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tabulate fits from models using extended metrics. ‚Äî tab_ref","text":"Returns dataframe extended fit metrics.","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/upperCaseFirst.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to convert the first character of a string to uppercase. ‚Äî upperCaseFirst","title":"Helper function to convert the first character of a string to uppercase. ‚Äî upperCaseFirst","text":"Helper function convert first character string uppercase.","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/upperCaseFirst.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to convert the first character of a string to uppercase. ‚Äî upperCaseFirst","text":"","code":"upperCaseFirst(s)"},{"path":"https://afsc-assessments.github.io/ebswp/reference/upperCaseFirst.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to convert the first character of a string to uppercase. ‚Äî upperCaseFirst","text":"s input string.","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/upperCaseFirst.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to convert the first character of a string to uppercase. ‚Äî upperCaseFirst","text":"Returns input string first character capitalized.","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/write_dat.html","id":null,"dir":"Reference","previous_headings":"","what":"Write Data to Text File ‚Äî write_dat","title":"Write Data to Text File ‚Äî write_dat","text":"function takes list data elements (matrices, vectors, values) writes specified text file. data element list preceded comment line indicating name.","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/write_dat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write Data to Text File ‚Äî write_dat","text":"","code":"write_dat(output_file = \"runs/dat/newfile.dat\", indata = in_data)"},{"path":"https://afsc-assessments.github.io/ebswp/reference/write_dat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write Data to Text File ‚Äî write_dat","text":"output_file character string specifying name output text file. Default \"output.txt\". indata list containing data elements written file. element can matrix, vector, value. Default in_data.","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/write_dat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write Data to Text File ‚Äî write_dat","text":"function return value; writes specified output file.","code":""},{"path":"https://afsc-assessments.github.io/ebswp/reference/write_dat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write Data to Text File ‚Äî write_dat","text":"","code":"# Assuming 'data_list' is a list of data elements # write_dat(output_file = \"sample_output.txt\", indata = data_list)"}]
